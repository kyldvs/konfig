
# hg
alias hgl="hg sl"
alias hga="hg add"
alias hgc="hg commit"
alias hgm="hg commit -Am"
alias hgam="hg commit --amend --rebase -Am"
alias hgs="hg status"
alias hgd="hg diff"
alias hgt="hg diff -c tip"
alias hgo="hg checkout"
alias hgsr="hg status --rev .^"

# git
alias ga="git add"
alias gc="git commit"
alias gs="git status"
alias gd="git diff"
alias go="git checkout"
alias gp="git remote prune origin"
alias gg="git log -15 --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) %C(white)%s%C(reset)%C(bold yellow)%d%C(reset)' --all"
alias gl="git log -15 --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset)%C(white) %s%C(reset)%C(bold green) (%ar)%C(reset)%C(bold yellow)%d%C(reset)' --all"

# arc
alias adp="arc diff --preview"

# tmux
alias tt="(tmux ls | grep -vx attached && tmux at) || tmux"

# connect using mosh
alias con="mosh -6 dev"
alias con2="mosh -6 dev2"
alias con3="mosh -6 dev3"

# ordered list of directory sizes
sizes() {
  du -sk ./* | \
    sort -nr | \
    awk '\
      BEGIN { pref[1]="K"; pref[2]="M"; pref[3]="G"; } \
      { total = total + $1; x = $1; y = 1; while( x > 1024 ) { x = (x + 1023)/1024; y++; } $1=""; printf("%g%s\t%s\n",int(x*10)/10,pref[y],$0); } \
      END { y = 1; while( total > 1024 ) { total = (total + 1023)/1024; y++; } printf("Total: %g%s\n",int(total*10)/10,pref[y]); } \
    '
}

# handy extract program
extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)  tar xvjf $1   ;;
      *.tar.gz)   tar xvzf $1   ;;
      *.bz2)      bunzip2 $1    ;;
      *.rar)      unrar x $1    ;;
      *.gz)       gunzip $1     ;;
      *.tar)      tar xvf $1    ;;
      *.tbz2)     tar xvjf $1   ;;
      *.tgz)      tar xvzf $1   ;;
      *.zip)      unzip $1      ;;
      *.Z)        uncompress $1 ;;
      *.7z)       7z x $1       ;;
      *)          echo "'$1' cannot be extracted via \`extract\`" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
